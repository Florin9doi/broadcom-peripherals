#pragma once

// Request and response buffer. The request will be overwritten by the response.
typedef struct {
    uint32_t buffer_size;
    uint32_t code;
    // Series of tagged data where the final tag is 0x0.
    uint8_t data[];
} vcmailbox_buffer_t;

#define VCMAILBOX_CODE_PROCESS_REQUEST    0x00000000
#define VCMAILBOX_CODE_REQUEST_SUCCESSFUL 0x80000000
#define VCMAILBOX_CODE_PROCESSING_ERROR   0x80000001

typedef enum {
{% for channel in channels %}
    VCMAILBOX_CHANNEL_{{ channel }} = {{ "0x{:x}".format(loop.index0) }},
{% endfor -%}
} vcmailbox_channel_t;

typedef enum {
{% for device in power_device_ids %}
    VCMAILBOX_DEVICE_{{ device }} = {{ "0x{:08x}".format(loop.index0) }},
{% endfor -%}
} vcmailbox_device_t;

typedef enum {
{% for clock in clock_ids %}
    VCMAILBOX_CLOCK_{{ clock }} = {{ "0x{:08x}".format(loop.index0) }},
{% endfor -%}
} vcmailbox_clock_id_t;

typedef enum {
{% for voltage in voltage_ids %}
    VCMAILBOX_VOLTAGE_{{ voltage }} = {{ "0x{:08x}".format(loop.index0) }},
{% endfor -%}
} vcmailbox_voltage_id_t;        

{% for bits, name, comment in mem_flags %}
// {{ comment }}
#define VCMAILBOX_MEM_FLAG_{{ name }} {{ "0x{:08x}".format(bits) }}
{% endfor %}

{% for property in properties %}
// {{ property.name }}
//
{% for line in property.description -%}
// {{ line }}
{% endfor -%}
#define VCMAILBOX_TAG_{{ property.lower | upper() }} {{ "0x{:08x}".format(property.tag) }}
typedef struct {
    uint32_t tag;
    uint32_t value_size; // in bytes
    bool response : 1;
    uint32_t reserved : 31;
{% if property.request.length != '0' %}
    // request values
{% for t, name, array, comment in property.request.fields %}
    {{ t }} {{ name }}{% if array %}[]{% endif %}; // {{ comment }}
{% endfor %}
{% endif %}
} vcmailbox_{{ property.lower }}_request_t;

typedef struct {
    uint32_t tag;
    uint32_t value_size; // in bytes
    bool response : 1;
    uint32_t response_value_size : 31;
    // response values
{% for t, name, array, comment in property.response.fields %}
    {{ t }} {{ name }}{% if array %}[]{% endif %}; // {{ comment }}
{% endfor %}
} vcmailbox_{{ property.lower }}_response_t;

{% endfor %}
